# AUTOGENERATED! DO NOT EDIT! File to edit: 04_Linear_Regression_ODE.ipynb (unless otherwise specified).

__all__ = ['LinearRegressionODE']

# Cell
import numpy as np
np.random.seed(0)

# Cell
class LinearRegressionODE:
    """Linear Regression with Ordinary Differential Equations"""

    def __init__(self, lambda_):
        """lambda_(float): regularization parameter"""

        self.lambda_ = lambda_

    def fit(self, X, y):
        """
        Args:

            X(np.array): (# of samples, # of features)
            y(np.array) is an array of shape (n,)
        """

        self.beta = np.zeros(X.shape[1]) # Learned regression coefficients.
        p1 = np.linalg.inv(np.dot(X.T, X)) + self.lambda_ * np.eye(X.shape[1], X.shape[1])
        p2 = np.dot(X.T, y)
        self.beta = np.dot(p1, p2)


    def predict(self, X):
        """
        Args:

            X(np.array): (# of samples, # of features)

        Returns:

            an array of shape (# of samples,).
        """

        y_predictions = np.dot(X, self.beta)
        return y_predictions
